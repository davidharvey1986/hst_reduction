""" drizzle.py

Script to run pyraf from the command line and multidrizzle files

Author : David Harvey
Date : 13/11/2011

"""
import copy
import sys
import argparse as ap
import stwcs
from stwcs import updatewcs
import pywcs
import argparse
import numpy as np
import csv as c
import os
import glob
import image_date as im
import drizzlepac 
from  drizzlepac import astrodrizzle
from drizzlepac import tweakreg
from drizzlepac import tweakback
from subprocess import call
import pysex as sex


def drizzle(input_filename, cluster, filter):

    '''
    PURPOSE : TO BRING TOGETHER IMAGES FROM DIFFERENT EPOCHS
              AND DRIZZLE THEM TOGETHER


    INPUTS : INPUTFILENAME: CAN EITHER BE A SINGLE FILE, OR
             A LIST USING A WILDCARD E.G *FLT.FITS

             OUTPUTFILENAME : THE NAME OF THE DRIZZLED OUT
             PUT FILENAME


    METHOD :

    1. FIRST IT NEEDS TO UPDATE THE WCS OF EACH INDIVIDUAL
       EXPOSURE, UNFORTUANTELY THE UPDATEWCS USED FOR THIS
       WILL DEPEND ON THE DATE OF THE OBSERVATIOB
       IT WILL ATTEMPT TO USE THE ORIGINAL VERSION ON THE LINUX
       SYSTEM, IF THIS FAILS IT WILL USE THE NEWER VERSION OF
       UPDATEWCS

       THE ERRORS ARE ASSOCIATED WITH THE ARRAY IS TOO DEEP


    2. ONCE IT HAS DONE THIS, IT WILL GET THE DATES OF ALL THE
       OBSERVATIONS AND DRIZZLE TOGETHER THOSE THAT ARE FROM THE
       EXACT SAME DATE
       ONCE IT HAS DONE THIS IT WILL TWEAK THESE DRIZZLED IMAGES


    3. THEN USING THE TWEAK OPERATION IN THE HEADER OF THESE
       DRIZZLED FILES IT WILL TWEAKBACK TO THE FLT IMAGES

    4. THEN IT WILL DRIZZLED TOGETHER ALL THE FLT IMAGES




    UPDATE : 15/01/2014 : NEW PIPELINE
             07/10/2014 : V2 : CHANGE FROM OBSERVATION DATE TO OBSERVATION RUN
    
    '''
    #OUTPUTFILENAME
    outputfilename = cluster+'_'+filter
    #SETUP ENVIRONMENT VARIABLE
    os.environ['jref'] = '../'
    os.environ['iref'] = '../'


    #1. FIRST UPDATE THE WCS
    #------------------------------------------
    update_wcs( input_filename )
    
    
    #2. NOW GET THE OBSERVATION DATES AND DRIZZLE THEM TOGETHER
    #--------------------------------------------------------------------------
    print 'Getting dates of the Observations'
    #obsDates, fltList = date_list( input_filename)
    obsRun, fltList = obs_name( input_filename )

       
    uniqueObs = np.unique(np.array(obsRun))


    if len(uniqueObs) > 1:
        drizzle_fields( obsRun, fltList, cluster, filter )
    else:
        print 'All observations taken on the same run'
    #4. NOW DRIZZLE TOGETHER ALL THE TWEAK FLT IMAGES
    
    astrodrizzle.AstroDrizzle( input_filename, \
                                output=str(outputfilename), \
                                median='No',\
                                final_wcs=True, \
                                final_scale=0.03, \
                                final_pixfrac=0.8, \
                                combine_type='minimum')
    


  

    '''
    FOR REFERENCE:

    
    TWEAKREG INPUTS
    ----------------------------------------------------------
    str(input_filename)
    residplot='both'
    see2dplot=True, 
    writecat=False, 
    catfile='catfile'
    xcol=1, ycol=2, fluxcol=3,
    searchrad=np.float(search_rad)
    fitgeometry='shift')
    refimage=str(refimage))
        
    ASTRODRIZZLE INPUT PARS
    --------------------------------------------------------
    str(input_filename),
    output=str(outputfilename), \
    final_wcs=True, \
    final_scale=0.03, \
    final_pixfrac=0.8, \
    combine_type='imedian', \
    final_refimage='ref_image_drz_sci.fits'
    '''
    
def update_wcs( input_filename):
    '''
    PURPOSE : TO UPDATE THE WCS USING THE DRIZZLEPAC

    NOT SO EASY AS DIFFERENT AGED OBSERVATIONS APPEARS TO NEED DIFFERENT
    UPDATE WCS
    '''
        
    #If i am updating various flt files some new some old thne
    #if new ones use a different module.
            
    #loop over inidivudla flt not *flt.fits
    
    from stwcs import updatewcs
    for iFile in glob.glob(input_filename):
        try:
            updatewcs.updatewcs(iFile)
        except Exception,e:
            print e
            print 'NEW IMAGE CHANGING TO NEW PIPELINE', iFile
            sys.path.insert(1,'/Users/DavidHarvey/Library/Code/python/pywcs-1.10.3.dev3657-py2.7-linux-x86_64.egg')
            sys.path.insert(1,'/Users/DavidHarvey/Library/Code/python/stwcs-1.1.1.dev26749-py2.7.egg')
            modules=copy.copy(sys.modules)
            for iModule in modules:
                if iModule.startswith('stwcs'):
                    del sys.modules[iModule]
                
            import stwcs
            from stwcs import updatewcs
            
            import pywcs
            print iFile
            updatewcs.updatewcs(iFile)
    
    import drizzlepac 
    from  drizzlepac import astrodrizzle
    from drizzlepac import tweakreg


def drizzle_fields( obsDates, fltList, cluster, filter):
    '''
    PURPOSE : IF THERE ARE OBSERVATIONS FROM DIFFERENT DATES / OBSRUNS
    THEN DRIZZLE THE DATES THAT ARE THE SAME TOGETHER
    THEN TWEAK THEM TO ONE REFERENCE DRIZZLE IMAGE
    TWEAK BACK TO THE FLT FITS

    INPUTS : OBSDATES : CAN BE ANY UNIQUE IDENTIFIER TO NAME OF THE RUN
                        OR DATE
    
    
    '''
    outputfilename = cluster+'_'+filter

    uniqueObs = np.unique(np.array(obsDates))

    print 'MORE THAN ONE OBSERVATION DATE/RUN SO DRIZZLING INDIVIDUALLY'
    print uniqueObs

    call(["mkdir", "keep"])
        

    for iDate in uniqueObs:
        obsDrizzle = np.array(fltList)[ np.array(obsDates) == str(iDate) ]
        drizzleString = ",".join(obsDrizzle)
        print iDate
        print obsDrizzle

        if not os.path.isfile("keep/"+str(iDate)+"_drz_sci.fits"):
            astrodrizzle.AstroDrizzle(drizzleString, \
                                        output=str(iDate), \
                                        final_wcs=True, \
                                        final_scale=0.03, \
                                        final_pixfrac=0.8, \
                                        combine_type='imedian')
            call(["cp",str(iDate)+"_drz_sci.fits","keep"])
    
        else:
            call(["cp","keep/"+str(iDate)+"_drz_sci.fits","."])

            
            
            
    #3. NOW TWEAK EACH DRIZZLED IMAGE
    #-----------------------------------------

    #First sextract them using tweak_sextract

    drzList=[]
    for iDate in uniqueObs:
        drzList.append(str(iDate)+"_drz_sci.fits")
        
    try:
        drzList.remove(str(outputfilename)+'_drz_sci.fits')
    except:
        print 'its okay, cluster drizzle doesn exist'

                    
       
    drzString= ",".join(drzList)
    

    #Run sextractor on the images
    call(["tweak_sextract.sh",str(cluster),str(filter)])
    refDate=obsDates[0]#
    refimage=drzList[0]#

    thresh=1.0
    search_rad=4.0 #Often this parameter is too big if the images hardly overlap. Keep at 1 if limited sources
    ref_sex( refimage )
    
    tweakreg.TweakReg(drzString, \
                        residplot='both', \
                        see2dplot=True, \
                        threshold=np.float(thresh), \
                        searchrad=np.float(search_rad), \
                        fitgeometry='rscale', updatehdr='True', \
                        refimage=refimage, \
                        catfile='catfile', \
                        xcol=1, ycol=2, fluxcol=3, \
                        minobj=2, \
                        refcat='reference.cat', \
                        refxcol=1, refycol=2, rfluxcol=3)
                          
    for iDate in uniqueObs:
        if iDate != obsDates:
            TweakFLT= np.array(fltList)[ np.array(obsDates) == str(iDate) ]
        tweakString = ",".join(TweakFLT)
        print tweakString
        tweakback.tweakback( str(iDate)+'_drz_sci.fits', \
                                input=tweakString )

            
            
            
            
def date_list(input_filename):
    '''
    PURPOSE : GET A LIST OF THE IMAGE DATES

    OUTPUTS : A LIST OF DATES OF IMAGES
              A LIST OF CORRESPONDING FLT IMAGES
    '''
    obsDates = []
    fltList = []
    for infile in glob.glob( os.path.join('',str(input_filename) ) ):
        #print "The date of" + infile + " is "+  im.image_date( infile )
        fltList.append(infile)
        obsDates.append(im.image_date( infile ))



    return obsDates, fltList


def obs_name( input_filename ):
    '''
    PURPOSE : TO GET THE OBSERVATION RUN NAME (DATA SET NAME)
             WHICH IS THE FIRST 6 CHARACATERS

    INPUTS : THE NAME OF ALL THE IMAGES

    OUTPUTS : THE REMOVED LAST 3 DIGITS TO GIVE THE NAME OF
              THE OBS RUN


    '''
    fltList = []
    obsRun = []

    for infile in glob.glob( os.path.join('',str(input_filename) ) ):
        #print "The date of" + infile + " is "+  im.image_date( infile )
        fltList.append( infile ) 
        obsRun.append( infile[:6] )


    return obsRun, fltList

import ipdb as pdb

def ref_sex( refimage ):
    '''
    PURPOSE : TO SEXTRACT THE COORDINATES OF THE OBJECTS IN
              FOR THE REFERENCE CATALOGUE

    '''

    conf_file = '/Users/DavidHarvey/Library/Code/IDL/rrg/code/shape/sex_files/tweak_wcs.sex'
    param_file =  '/Users/DavidHarvey/Library/Code/IDL/rrg/code/shape/sex_files/tweak_wcs.param'
    sexCat = sex.run(   refimage, conf_file=conf_file, param_file=param_file, \
                        conf_args={'CATALOG_NAME':'reference.cat'})
    

if __name__ == '__main__':
    parser = ap.ArgumentParser(description='Multidrizzle the file')
    parser.add_argument('inputfile',type=str,nargs=1,\
                            help='Multidrizzle ds9 the file')
    parser.add_argument('cluster',type=str,nargs=1,\
                            help='Multidrizzle ds9 the file')
   
    parser.add_argument('filter',type=str,nargs=1,\
                            help='Multidrizzle ds9 the file')
    args = parser.parse_args()
    
    input_filename=args.inputfile[0]
    cluster=args.cluster[0]
    filter=args.filter[0]

    drizzle(input_filename, cluster, filter)
